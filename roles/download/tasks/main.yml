---
# We use aria2 to download zim files for two reasons:
# * support for webseed downloads
# * support for local peer discovery; if applying to many local devices
#     at once, they should utilize the LAN as well to prevent duplication
#     of downloaded data and speed up the download
- name: Ensure {{ data_volume }} directory exists
  file:
    state: directory
    path: "{{ data_volume }}"
    mode: a+rwx

- name: Install aria2
  apt:
    name: aria2
    state: latest

- name: Create aria2c user for seeding
  user:
    name: aria2c

- name: Configure aria2c logging to prevent thrashing an SD card
  copy:
    src: journald@aria2c.conf
    dest: /etc/systemd/journald@aria2c.conf
    owner: root
    group: root
    mode: '0644'

- name: Activate aria2c logging
  systemd:
    name: systemd-journald
    state: restarted

- name: Install template aria2c-seed@.service
  template:
    src: aria2c-seed@.service
    dest: /etc/systemd/system/aria2c-seed@.service
    owner: root
    group: root
    mode: 644

- name: Reload systemd
  systemd:
    daemon_reload: yes

- name: Download all torrent files
  get_url:
    url: "{{ item }}"
    dest: "{{ data_volume }}/"
  become: yes
  become_user: aria2c
  register: torrent_files
  loop: "{{ kiwix_zim_torrent_urls }}"

- name: Start downloading torrent contents to {{ data_volume }}
  shell: |
    aria2c --bt-enable-lpd --seed-time=0 --force-save=true {{ item.dest }}
  async: 86400  # 1 day in seconds
  poll: 0
  become: yes
  become_user: aria2c
  loop: "{{ torrent_files.results }}"
  args:
    chdir: "{{ data_volume }}"
  register: async_downloads

# Check every minute for a total of 300 tries, in total 5 hours.
# This may indeed be much longer for big torrents... what's a sane
# value here?
# TODO: make the delay & retries configurable
- name: Wait for all torrents to complete
  async_status:
    jid: "{{ item.ansible_job_id }}"
  loop: "{{ async_downloads.results }}"
  become: yes
  become_user: aria2c
  register: async_download_status
  until: async_download_status.finished
  retries: 300
  delay: 60

- name: Ensure proper permissions on {{ data_volume }} & contents
  file:
    path: "{{ data_volume }}"
    mode: u=rX,g=rX,o=rX
    recurse: yes

# Create a systemd service to seed the file at a low & slow pace; torrents
# stay healthier longer with long term seeders, even if they are slow
- name: Create systemd services to seed all torrents
  systemd:
    name: "aria2c-seed@{{ item.dest | basename }}"
    state: started
    enabled: yes
    daemon_reload: yes
  loop: "{{ torrent_files.results }}"
